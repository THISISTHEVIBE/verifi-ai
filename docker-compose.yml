# Docker Compose for local development and testing
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: verifiai_dev
      POSTGRES_USER: verifiai
      POSTGRES_PASSWORD: verifiai_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U verifiai -d verifiai_dev"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for rate limiting and caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # VerifiAI Site (Backend API + Marketing Site)
  verifiai-site:
    build:
      context: ./verifiai-site
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://verifiai:verifiai_password@db:5432/verifiai_dev
      - NEXTAUTH_SECRET=dev-secret-change-in-production
      - NEXTAUTH_URL=http://localhost:3000
      - STORAGE_TYPE=local
      - STORAGE_LOCAL_PATH=/app/uploads
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./verifiai-site:/app
      - /app/node_modules
      - uploads_data:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  # VerifiAI Product (Frontend React App)
  verifiai-product:
    build:
      context: ./verifiai-product
      dockerfile: Dockerfile
    ports:
      - "3001:3000"
    environment:
      - VITE_API_BASE=http://localhost:3000
    volumes:
      - ./verifiai-product:/app
      - /app/node_modules
    command: npm run dev

  # MinIO for S3-compatible local storage (optional)
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mailhog for email testing (optional)
  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI

volumes:
  postgres_data:
  redis_data:
  minio_data:
  uploads_data:
